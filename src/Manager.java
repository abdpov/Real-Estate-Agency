import java.util.*;
import java.sql.*;

public class Manager extends RoleMenu{
    static Scanner scanner = new Scanner(System.in);
    private static final String DB_URL = "jdbc:sqlite:real_estate_agency.db";
    public void showMenu() {
        while (true){
            System.out.println("1. –ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤—Å–µ—Ö —Ä–∞–±–æ—á–∏—Ö");
            System.out.println("2. –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–¥–∞—á");
            System.out.println("3. –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏");
            System.out.println("4. –ü–æ–∫–∞–∂–∏—Ç–µ –∑–æ–Ω—É –æ—Ö–≤–∞—Ç–∞");
            System.out.println("5. –í—ã—Ö–æ–¥");
            int option = scanner.nextInt();

            if(option == 1){
                showAllWorkers();
            } else if(option == 2){
                assignTask();
            } else if(option == 3){
                viewWorkerTasks();
            } else if(option == 4){
                showCoverageByRegion();
            } else if(option == 5){
                break;

            } else {
                System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç");
            }
        }
    }
    private static void showAllWorkers() {
        String sql = "SELECT username FROM users WHERE role = 'worker'";

        try (Connection conn = DriverManager.getConnection(DB_URL);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            System.out.println("\n--- –í—Å–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–∏ ---");
            while (rs.next()) {
                String username = rs.getString("username");
                System.out.println("üë§ " + username);
            }

        } catch (SQLException e) {
            System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: " + e.getMessage());
        }
    }

    private static void assignTask() {
        scanner.nextLine();

        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –∑–∞–¥–∞—á–∞: ");
        String username = scanner.nextLine();

        System.out.print("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´–ó–∞–≤–µ—Ä—à–∏—Ç—å –æ—Ç—á–µ—Ç¬ª): ");
        String task = scanner.nextLine();

        String getUserSQL = "SELECT id, role FROM users WHERE username = ?";
        String insertTaskSQL = "INSERT INTO tasks (username, task) VALUES (?, ?)";

        try (Connection conn = DriverManager.getConnection(DB_URL);
             PreparedStatement getUserStmt = conn.prepareStatement(getUserSQL)) {

            getUserStmt.setString(1, username);
            ResultSet rs = getUserStmt.executeQuery();

            if (rs.next()) {
                int userId = rs.getInt("id");
                String role = rs.getString("role");

                if (!role.equalsIgnoreCase("worker")) {
                    System.out.println("‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∞—Ç—å –∑–∞–¥–∞—á–∏ –Ω–µ—Ä–∞–±–æ—á–∏–º —Ä–æ–ª—è–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, " + role + ").");
                    return;
                }

                try (PreparedStatement insertStmt = conn.prepareStatement(insertTaskSQL)) {
                    insertStmt.setString(1, username);
                    insertStmt.setString(2, task);
                    insertStmt.executeUpdate();

                    System.out.println("‚úÖ Task assigned to worker: " + username);
                }

            } else {
                System.out.println("‚ùå –ó–∞–¥–∞—á–∞, –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–Ω–∏–∫—É.");
            }

        } catch (SQLException e) {
            System.out.println("–û—à–∏–±–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–¥–∞—á–∏: " + e.getMessage());
        }
    }
    private static void viewWorkerTasks() {
        scanner.nextLine(); // Clear leftover newline if needed

        System.out.print("Enter the worker's username: ");
        String username = scanner.nextLine();

        String getUserSQL = "SELECT role FROM users WHERE username = ?";
        String getTasksSQL = "SELECT task, status FROM tasks WHERE username = ?";

        try (Connection conn = DriverManager.getConnection(DB_URL);
             PreparedStatement getUserStmt = conn.prepareStatement(getUserSQL)) {

            getUserStmt.setString(1, username);
            ResultSet userRs = getUserStmt.executeQuery();

            if (userRs.next()) {
                String role = userRs.getString("role");

                if (!role.equalsIgnoreCase("worker")) {
                    System.out.println("‚ùå That user is not a worker.");
                    return;
                }

                try (PreparedStatement getTasksStmt = conn.prepareStatement(getTasksSQL)) {
                    getTasksStmt.setString(1, username);
                    ResultSet taskRs = getTasksStmt.executeQuery();

                    System.out.println("\nüìã –ó–∞–¥–∞—á–∏, –≤–æ–∑–ª–æ–∂–µ–Ω–Ω—ã–µ –Ω–∞ " + username + ":");
                    boolean hasTasks = false;
                    while (taskRs.next()) {
                        String task = taskRs.getString("task");
                        String status = taskRs.getString("status");
                        System.out.println("- " + task + (status != null ? " [" + status + "]" : ""));
                        hasTasks = true;
                    }

                    if (!hasTasks) {
                        System.out.println("üì≠ –ù–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.");
                    }
                }

            } else {
                System.out.println("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            }

        } catch (SQLException e) {
            System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á: " + e.getMessage());
        }
    }
}
